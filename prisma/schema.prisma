// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  username  String?   @unique
  password  String
  image     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  projects  Project[]
  goals     Goal[]
}

model Project {
  id          String   @id @default(cuid())
  projectName String
  type        String
  status      String
  mainStack   String[]
  budget      String?
  date        DateTime
  description String?
  projectUrl  String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  @@unique([projectName, userId])
}

model Goal {
  id          String   @id @default(cuid())
  goalName    String
  catergory   String
  priority    String
  status      String
  date        DateTime
  progress    Float
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String

  @@unique([goalName, userId]) // Ensures goalName is unique per user
}

model Help {
  id       String @id @default(cuid())
  username String
  email    String
  subject  String
  message  String
}

model FeedBack {
  id              String @id @default(cuid())
  overallRating   Int
  likeMost        String
  generalFeedback String
  wouldRecommend  String
}
